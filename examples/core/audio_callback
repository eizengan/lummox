#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "lummox"

Lummox::SDL.init!

# Create a callback to play the file
audio_enqueue_callback = Proc.new do |user_data, sample_ptr, num_samples|
  puts "received #{user_data.read_string_to_null}"

  # Write white noise to pointer
  samples = Array.new(num_samples) { Random.rand(256) }
  sample_ptr.write_array_of_uint8(samples)
end

# Open an audio device
device = nil
is_capture = 0
user_data_value = "desired user data\x0"
desired_spec = Lummox::SDL::Core::AudioSpec.new.tap do |spec|
  spec[:freq]   = 44100
  spec[:format] = Lummox::SDL::Core::AUDIO_S16
  spec[:channels] = 2
  spec[:callback] = audio_enqueue_callback
  spec[:user_data] = FFI::MemoryPointer.from_string(user_data_value)
end
opened_spec = Lummox::SDL::Core::AudioSpec.new
allowed_changes = Lummox::SDL::Core::AUDIO_ALLOW_ANY_CHANGE
audio_device_id = Lummox::SDL::Core.open_audio_device(device, is_capture, desired_spec, opened_spec, allowed_changes)

# Play file
Lummox::SDL::Core.pause_audio_device(audio_device_id, :false)
sleep 4

# Clean up
Lummox::SDL::Core.close_audio_device(audio_device_id)

Lummox::SDL.quit!

puts "all done!"
